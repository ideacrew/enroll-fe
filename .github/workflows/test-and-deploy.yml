name: test and deploy front end

on:
  push:
    # branches:
    #   - trunk

jobs:
  format:
    name: format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: v3-${{ runner.os }}-node16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            v3-${{ runner.os }}-node16-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Check formatting
        run: npx nx format:check
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: v3-${{ runner.os }}-node16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            v3-${{ runner.os }}-node16-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Lint Application(s)
        run: npx nx affected:lint --base=origin/trunk~1 --head=origin/trunk --parallel
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: v3-${{ runner.os }}-node16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            v3-${{ runner.os }}-node16-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Test Application(s)
        run: npx nx affected:test --base=origin/trunk~1 --head=origin/trunk --parallel --maxParallel=2
  e2e:
    name: e2e
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Cache node_modules
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: v3-${{ runner.os }}-node16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            v3-${{ runner.os }}-node16-
      - name: Cache cypress
        uses: actions/cache@v3
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-v7-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cypress-cache-v7-${{ runner.os }}
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run e2e Tests
        # run: npx nx affected:e2e --base=origin/trunk~1 --head=origin/trunk --browser chrome --headless
        run: npx nx e2e coverme-e2e --browser chrome --headless
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: v3-${{ runner.os }}-node16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            v3-${{ runner.os }}-node16-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build Application(s)
        run: npx nx affected:build --base=origin/trunk~1 --head=origin/trunk
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: affected-apps
          path: dist/apps
  deploy:
    name: deploy
    needs: [format, lint, test, e2e, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: node_modules
          key: v3-${{ runner.os }}-node16-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            v3-${{ runner.os }}-node16-
      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Download artifact
        id: download-artifact
        uses: actions/download-artifact@v2
        continue-on-error: true
        with:
          name: affected-apps
          path: dist/apps
      - name: Deploy Application(s)
        if: success()
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: npx nx affected --target=deploy --base=origin/trunk~1 --head=origin/trunk
