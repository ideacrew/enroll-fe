import { ApplicantsEntity } from './applicants.models';
import * as ApplicantsActions from './applicants.actions';
import { State, initialState, reducer } from './applicants.reducer';

describe('Applicants Reducer', () => {
  const createApplicantsEntity = (id: string, name = ''): ApplicantsEntity => ({
    id,
    name: name || `name-${id}`,
  });

  describe('valid Applicants actions', () => {
    it('loadApplicantsSuccess should return set the list of known Applicants', () => {
      const applicants = [
        createApplicantsEntity('PRODUCT-AAA'),
        createApplicantsEntity('PRODUCT-zzz'),
      ];
      const action = ApplicantsActions.loadApplicantsSuccess({ applicants });

      const result: State = reducer(initialState, action);

      expect(result.loaded).toBe(true);
      expect(result.ids.length).toBe(2);
    });
  });

  describe('unknown action', () => {
    it('should return the previous state', () => {
      const action = {} as any;

      const result = reducer(initialState, action);

      expect(result).toBe(initialState);
    });
  });
});
